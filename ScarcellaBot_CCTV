#!/usr/bin/env python2.7
"""
creare un file di configurazione ScarcellaBot_config
nel quale definire le seguenti variabili

TELEGRAM_BOT_TOKEN
TELEGRAM_USERS_ID
IMAGES_PATH
"""
import ScarcellaBot_config
import sys
import time
import os
import telepot
import requests
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from pprint import pprint
from datetime import datetime


class MyHandler(FileSystemEventHandler):
    def on_created(self, event):
        print "Nuovo file: " + event.src_path
        global lastMessage
        if os.path.splitext(event.src_path)[1] == ".jpg" and \
                        (datetime.now()-lastMessage).seconds > ScarcellaBot_config.SEND_SECONDS:
            for user in ScarcellaBot_config.TELEGRAM_USERS_ID:
                try:
                    f = open(event.src_path, 'rb')
                    print 'Invio il messaggio a: ' + user
                    bot.sendPhoto(user, f)
                    lastMessage = datetime.now()
                except:
                    print "Impossibile inviare l'immagine %s a %s" % (sys.exc_info()[0], user)
                finally:
                    f.close()
        else:
            print("Non invio il messaggio. Devono passare almeno {0} secondi dall'ultimo invio ({1})".format(ScarcellaBot_config.SEND_SECONDS, lastMessage))


if __name__ == "__main__":
    lastMessage = datetime.now()  # datetime dell'ultimo messaggio inviato
    # ------ TELEGRAM --------------
    bot = None  # imposto il telegram Bot
    try:
        bot = telepot.Bot(ScarcellaBot_config.TELEGRAM_BOT_TOKEN)
        utente = bot.getMe()
        # scambio qualche messaggio all'avvio:
        print(utente)
    except:
        print "Impossibile inizializzare il BOT", sys.exc_info()[0]
    for u in ScarcellaBot_config.TELEGRAM_USERS_ID:
        print 'Invio il messaggio a: ' + u
        bot.sendMessage(u, 'Mi sono avviato adesso! - ' + str(datetime.now()))


    # definisco il gestore che deve essere invocato nel loop del bot
    def handle(msg):
        pprint(msg)
    # avvio il loop del bot che resta in ascolto dei messaggi
    # verso il BPT (passando il mio gestore)
    bot.message_loop(handle)


    # ------ WATCHDOG --------------
    # watchdog folder
    path = ScarcellaBot_config.IMAGES_PATH if ScarcellaBot_config.IMAGES_PATH > 1 else '.'
    event_handler = MyHandler()
    observer = Observer()
    observer.schedule(event_handler, path, recursive=False)
    observer.start()


    # tengo in vita il processo fino a che
    # qualcuno non lo interrompe da tastiera
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
        bot.sendMessage(u, 'Stop!! - ')
    observer.join()
